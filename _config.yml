# https://mmistakes.github.io/minimal-mistakes/docs/quick-start-guide/#installing-the-theme

# theme                  : "minimal-mistakes-jekyll"
remote_theme: "mmistakes/minimal-mistakes"
minimal_mistakes_skin: "contrast" # "air", "aqua", "contrast", "dark", "dirt", "neon", "mint", "plum", "sunrise"

# Site Settings
locale: "ko"
title: "JUNYIHONG'S BLOG"
title_separator: "-"
subtitle: "JUN"
name: "홍준이(Hong JunYi)"
description: "Web Developer"
url: "https://junyihong.github.io"
baseurl: # 폴백 (예기치 못한 오류) 시 연결되는 URL
repository: "https://github.com/junyihong/junyihong.github.io"
teaser: # 폴백 시 나타나는 이미지, "assets/images"로 연결됨.
logo: # 화면에 보여지는 logo 이미지     ex) "/assets/images/88x88.png"
masthead_title: "준이의 공부한 것들 기록하는 공간"
# breadcrumbs            : false # true, false (default)
words_per_minute: 200
comments:
  provider:
    "disqus"
    # false (default) , "discourse", "facebook",
    # "staticman", "staticman_v2", "utterances", "giscus", "custom"
  disqus:
    shortname: "junyihong-github-io"
  discourse:
    server: # https://meta.discourse.org/t/embedding-discourse-comments-via-javascript/31963 , e.g.: meta.discourse.org
  facebook:
    # https://developers.facebook.com/docs/plugins/comments
    appid:
    num_posts: # 5 (default)
    colorscheme: # "light" (default), "dark"
  utterances:
    theme: # "github-light" (default), "github-dark"
    issue_term: # "pathname" (default)
  giscus:
    repo_id: # Shown during giscus setup at https://giscus.app
    category_name: # Full text name of the category
    category_id: # Shown during giscus setup at https://giscus.app
    discussion_term: # "pathname" (default), "url", "title", "og:title"
    reactions_enabled: # '1' for enabled (default), '0' for disabled
    theme: # "light" (default), "dark", "dark_dimmed", "transparent_dark", "preferred_color_scheme"
  staticman:
    branch: # "master"
    endpoint: # "https://{your Staticman v3 API}/v3/entry/github/"
reCaptcha:
  siteKey:
  secret:
atom_feed:
  path: # blank (default) uses feed.xml
  hide: # true, false (default)
search: # true, false (default)
search_full_content: # true, false (default)
search_provider: # lunr (default), algolia, google
lunr:
  search_within_pages: # true, false (default)
algolia:
  application_id: # YOUR_APPLICATION_ID
  index_name: # YOUR_INDEX_NAME
  search_only_api_key: # YOUR_SEARCH_ONLY_API_KEY
  powered_by: # true (default), false
google:
  search_engine_id: # YOUR_SEARCH_ENGINE_ID
  instant_search: # false (default), true
# SEO Related
google_site_verification:
bing_site_verification:
naver_site_verification:
yandex_site_verification:
baidu_site_verification:

# Social Sharing
twitter:
  username:
facebook:
  username:
  app_id:
  publisher:
og_image: # Open Graph/Twitter default site image
# For specifying social profiles
# - https://developers.google.com/structured-data/customize/social-profiles
social:
  type: # Person or Organization (defaults to Person)
  name: # If the user or organization name differs from the site's name
  links: # An array of links to social media profiles

# Analytics
analytics:
  provider: "google-gtag" # false (default), "google", "google-universal",  "custom"
  google:
    tracking_id: "G-HCENR6QR4H"
    anonymize_ip: # true, false (default)

# Site Author
author:
  name: "Hong JunYi"
  avatar: "/assets/logo.ico/android-chrome-192x192.png"
  bio: |
    준이의 개발 블로그

    공부한 것들 기록하는 공간

  location: "Republic of Korea"
  email:

  links:
    - label: "Email"
      icon: "fas fa-fw fa-envelope-square"
      url: mailto:junyihong@email.com
    - label: "GitHub"
      icon: "fab fa-fw fa-github"
      url: "https://github.com/junyihong"
    # - label: "Facebook"
    #   icon: "fab fa-fw fa-facebook-square"
    #   url: "https://www.facebook.com/junyihong"
    # - label: "Instagram" # 표시되는 이름입니다.
    #   icon: "fab fa-fw fa-instagram" # fab fa-fw fa-{SNS NAME} 으로 해주세요.
    #   url: "https://www.instagram.com/" # 개인 SNS 계정 링크를 기재하면 됩니다.

# Site Footer
footer:
  links:
    - label: "Email"
      icon: "fas fa-fw fa-envelope-square"
      url: mailto:junyihong@email.com
    - label: "GitHub"
      icon: "fab fa-fw fa-github"
      url: "https://github.com/junyihong"
    - label: "Facebook"
      icon: "fab fa-fw fa-facebook-square"
      url: "https://www.facebook.com/junyihong"
    - label: "Instagram" # 표시되는 이름입니다.
      icon: "fab fa-fw fa-instagram" # fab fa-fw fa-{SNS NAME} 으로 해주세요.
      url: "https://www.instagram.com/" # 개인 SNS 계정 링크를 기재하면 됩니다.

# Reading Files
include:
  - .htaccess
  - _pages
exclude:
  - "*.sublime-project"
  - "*.sublime-workspace"
  - vendor
  - .asset-cache
  - .bundle
  - .jekyll-assets-cache
  - .sass-cache
  - assets/js/plugins
  - assets/js/_main.js
  - assets/js/vendor
  - Capfile
  - CHANGELOG
  - config
  - Gemfile
  - Gruntfile.js
  - gulpfile.js
  - LICENSE
  - log
  - node_modules
  - package.json
  - package-lock.json
  - Rakefile
  - README
  - tmp
  - /docs # ignore Minimal Mistakes /docs
  - /test # ignore Minimal Mistakes /test
keep_files:
  - .git
  - .svn
encoding: "utf-8"
markdown_ext: "markdown,mkdown,mkdn,mkd,md"

# Conversion
markdown: kramdown
highlighter: rouge
lsi: false
excerpt_separator: "\n\n"
incremental: false

# Markdown Processing
kramdown:
  input: GFM
  hard_wrap: false
  auto_ids: true
  footnote_nr: 1
  entity_output: as_char
  toc_levels: 1..6
  smart_quotes: lsquo,rsquo,ldquo,rdquo
  enable_coderay: false

# Sass/SCSS
sass:
  sass_dir: _sass
  style: compressed # https://sass-lang.com/documentation/file.SASS_REFERENCE.html#output_style

# Outputting
permalink: /:categories/:title/
paginate: 5 # amount of posts to show
paginate_path: /page:num/
timezone: # https://en.wikipedia.org/wiki/List_of_tz_database_time_zones

# Plugins (previously gems:)
plugins:
  - jekyll-paginate
  - jekyll-sitemap
  - jekyll-gist
  - jekyll-feed
  - jekyll-include-cache

# mimic GitHub Pages with --safe
whitelist:
  - jekyll-paginate
  - jekyll-sitemap
  - jekyll-gist
  - jekyll-feed
  - jekyll-include-cache

# Archives
#  Type
#  - GitHub Pages compatible archive pages built with Liquid ~> type: liquid (default)
#  - Jekyll Archives plugin archive pages ~> type: jekyll-archives
#  Path (examples)
#  - Archive page should exist at path when using Liquid method or you can
#    expect broken links (especially with breadcrumbs enabled)
#  - <base_path>/tags/my-awesome-tag/index.html ~> path: /tags/
#  - <base_path>/categories/my-awesome-category/index.html ~> path: /categories/
#  - <base_path>/my-awesome-category/index.html ~> path: /
category_archive:
  type: liquid
  path: /categories/
tag_archive:
  type: liquid
  path: /tags/
# https://github.com/jekyll/jekyll-archives
# jekyll-archives:
#   enabled:
#     - categories
#     - tags
#   layouts:
#     category: archive-taxonomy
#     tag: archive-taxonomy
#   permalinks:
#     category: /categories/:name/
#     tag: /tags/:name/

# HTML Compression
# - https://jch.penibelst.de/
compress_html:
  clippings: all
  ignore:
    envs: development

# Defaults
defaults:
  # _posts
  - scope:
      path: ""
      type: posts
    values:
      layout: single
      author_profile: true
      read_time: true
      comments: true
      share: true
      related: true
      sidebar_main: true

  # _pages                      : 해당 하단 영역이 새로 추가되었습니다.
  - scope:
      path: "_pages"
      type: pages
    values:
      layout: single
      author_profile: true
