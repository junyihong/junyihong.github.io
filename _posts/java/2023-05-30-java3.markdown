---
permalink: /java/java3
title: "JAVA - 3"
categories:
  - java
tags:
  - 자바
  - 이클립스
toc: true
toc_sticky: true
toc_label: "JAVA - 3"
---

![img](/images/java/java.jpg)

### 커피 주문 시나리오 만들기

**ProductVo.java**

아래 코드는 상품(Product) 정보를 저장하기 위한 Value Object(VO)인 `ProductVo` 클래스입니다.

<script src="https://gist.github.com/junyihong/01e40d0574e728d64fdd0b4200ad758b.js"></script>

1. 클래스 멤버 변수: `productNo`, `productName`, `price`는 각각 상품의 번호, 이름, 가격을 저장하는 변수입니다.
2. `getProductNo()`, `getProductName()`, `getPrice()` 함수는 각각 해당 상품 속성의 값을 반환하는 함수입니다.
3. `setProductNo(String productNo)`, `setProductName(String productName)`, `setPrice(int price)` 함수는 각각 상품 속성의 값을 설정하는 함수입니다.
4. `printResult(String msg)` 함수는 파라미터로 전달받은 메시지를 출력하는 함수입니다. 이 함수는 `setProductNo()`, `setProductName()`, `setPrice()` 함수 내에서 호출됩니다.
5. `print(String... message)` 함수는 가변인자를 사용하여 메시지를 받아들여 배열로 반환하는 함수입니다. 이 함수는 동적 파라미터를 처리하는 데 사용됩니다.

<br/>

**TestMethod.java**

`ProductVo` 클래스를 활용하여 상품 정보를 저장하고 조회하는 예제인 `TestMethod` 클래스입니다.

<script src="https://gist.github.com/junyihong/4fee100487ce694a0fd73f0eeb472ad7.js"></script>

1. `ProductVo` 객체 `product`를 생성합니다.
2. `product` 객체의 `setProductNo("a001")`, `setProductName("아메리카노")`, `setPrice(3800)` 함수를 사용하여 속성 값들을 설정합니다.
3. `product` 객체의 `getProductNo()`, `getProductName()`, `getPrice()` 함수를 사용하여 속성 값을 조회하여 각각 `productNo`, `productName`, `price` 변수에 저장합니다.
4. `productNo`, `productName`, `price` 변수의 값을 출력합니다.
5. `product` 객체의 `print("아메리카노", "카페라떼", "카페모카")` 함수를 사용하여 동적 파라미터를 전달하여 출력합니다.

TestMethod 에서 Run을 누르면 출력값은

<script src="https://gist.github.com/junyihong/41d0d2e67ef8fe4dd4e921438010f3a2.js"></script>

다음과 같이 나타나게 됩니다.
