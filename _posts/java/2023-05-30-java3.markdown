---
permalink: /java/java3
title: "JAVA - 3"
categories:
  - java
tags:
  - java
  - eclipse
toc: true
toc_sticky: true
toc_label: "JAVA - 3"
---

![img](/images/java/java.jpg)

### 커피 주문 시나리오 만들기

**ProductVo.java**

아래 코드는 상품(Product) 정보를 저장하기 위한 Value Object(VO)인 `ProductVo` 클래스입니다.

```java
import java.util.Arrays;
public class ProductVo {

		// VO (Value Object): VO는 주로 도메인 모델 내에서 사용
		// 값 객체라고도 불리며, 불변성(Immutable)을 가지는 객체입니다.
		// DTO (Data transfer Object): 주로 외부 시스템과의 데이터 교환
		// 데이터 전송 객체라고도 불리며, 데이터의 전송을 단순화하기 위해 사용됩니다.
		// 주로 데이터베이스 쿼리나 외부 시스템과의 데이터 교환 등에서 사용됩니다.
		/* 전역변수 - 품목변호, 품목명, 단가 */
		public String productNo;
		public String productName;
		public int price;

		/* 외부에서 호출 시 전역 변수의 품목 번호를 반환하기 위한 함수 */
		public String getProductNo() {
			return productNo;
		}
		/* 외부에서 품목번호를 제공 시 전역변수의 품목번호에 값을 저장하기 위한 함수 */
		public void setProductNo(String productNo) {
			this.productNo = productNo;
			this.printResult(productNo);
		}
		/* 외부에서 호출 시 전역변수의 제품명을 반환하기 위한 함수 */
		public String getProductName() {
			return productName;
		}
		/* 외부에서 제품명을 제공시 전역변수의 제품명에 값을 저장하기 위한 함수 */
		public void setProductName(String productName) {
			this.productName = productName;
			this.printResult(productNo);
		}
		/* 외부에서 호출 시 전역변수의 단가를 반환하기 위한 함수*/
		public int getPrice() {
			return price;
		}
		/* 외부에서 단가를 제공 시 전역변수의 단가에 값을 저장하기 위한 함수 */
		public void setPrice(int price) {
			this.price = price;

			/* 오류발생 - printResult()는 String 타입의 파라미터만 들어올 수 있다.*/
			// printResult(productNo);

			/* String 연산에서 '문자 + 숫자 = 문자' 가 된다. */
			String msg = "" + price;
			this.printResult(msg);
		}
		/* setXXX() 함수를 사용 시 아래의 메시지가 나타나도록 함수 구현 */
		public String printResult(String msg) {
			return msg + "가 입력되었습니다.";
		}
		/* 동적 파라미터를 사용한 print() 함수를 사용 */
		public String print(String... message) { // 가변인자
			/* Arrays.toString() 함수는 앞으로 배울 배열에서 다룰 예정. */
			return Arrays.toString(message);
		}

}
```

1. 클래스 멤버 변수: `productNo`, `productName`, `price`는 각각 상품의 번호, 이름, 가격을 저장하는 변수입니다.
2. `getProductNo()`, `getProductName()`, `getPrice()` 함수는 각각 해당 상품 속성의 값을 반환하는 함수입니다.
3. `setProductNo(String productNo)`, `setProductName(String productName)`, `setPrice(int price)` 함수는 각각 상품 속성의 값을 설정하는 함수입니다.
4. `printResult(String msg)` 함수는 파라미터로 전달받은 메시지를 출력하는 함수입니다. 이 함수는 `setProductNo()`, `setProductName()`, `setPrice()` 함수 내에서 호출됩니다.
5. `print(String... message)` 함수는 가변인자를 사용하여 메시지를 받아들여 배열로 반환하는 함수입니다. 이 함수는 동적 파라미터를 처리하는 데 사용됩니다.

<br/>

**TestMethod.java**

`ProductVo` 클래스를 활용하여 상품 정보를 저장하고 조회하는 예제인 `TestMethod` 클래스입니다.

```java
public class TestMethod {

	public static void main(String[] args) {
		// 객체의 생성
		ProductVo product = new ProductVo();

		// 함수를 이용하여 속성 값의 저장
		product.setProductNo("a001");
		product.setProductName("아메리카노");
		product.setPrice(3800);

		// 함수를 이용하여 속성 값을 조회
		String productNo = product. getProductNo();
		String productName = product.getProductName();
		int price = product.getPrice();

		System.out.println("productNo = " + productNo);
		System.out.println("productName = " + productName);
		System.out.println("price = " + price);

		// 동적 파라미터의 사용
		product.print("아메리카노", "카페라떼", "카페모카");
	}

}
```

1. `ProductVo` 객체 `product`를 생성합니다.
2. `product` 객체의 `setProductNo("a001")`, `setProductName("아메리카노")`, `setPrice(3800)` 함수를 사용하여 속성 값들을 설정합니다.
3. `product` 객체의 `getProductNo()`, `getProductName()`, `getPrice()` 함수를 사용하여 속성 값을 조회하여 각각 `productNo`, `productName`, `price` 변수에 저장합니다.
4. `productNo`, `productName`, `price` 변수의 값을 출력합니다.
5. `product` 객체의 `print("아메리카노", "카페라떼", "카페모카")` 함수를 사용하여 동적 파라미터를 전달하여 출력합니다.

TestMethod 에서 Run을 누르면 출력값은

```java
productNo = a001
productName = 아메리카노
price = 3800
```

다음과 같이 나타나게 됩니다.
