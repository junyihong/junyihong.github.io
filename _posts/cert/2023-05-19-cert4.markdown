---
permalink: /cert/cert4
title: "소프트웨어 설계 - 4"
categories:
  - certificate
tags:
  - information
  - certificate
  - 정보처리기사
  - 정처기
toc: true
toc_sticky: true
toc_label: "소프트웨어 설계 - 4"
---

![img](/images/cert4.jpg)

# 소프트웨어 설계 4

### **유스케이스(Use Case) 다이어그램**

### **기능 모델링**

사용자의 요구사항을 분석하여 개발될 시스템이

갖추어야 할 기능을 정리한 후

사용자와 함께 정리된 내용을 공유하기 위해

그림으로 표현하는 것이다.

개발될 시스템의 전반적인 형태를 기능에 초점을 맞춰 표현.

- **기능 모델링의 종류**

✓ 유스케이스(Use Case) 다이어그램

✓ 액티비티(Activity) 다이어그램

### **유스케이스(Use Case) 다이어그램**

사용자와 다른 외부 시스템들이 개발될 시스템을 이용해

수행할 수 있는 기능을

사용자 관점에서 표현한 것이다.

### **유스케이스(Use Case) 다이어그램의 구성 요소**

![https://blog.kakaocdn.net/dn/cj7Y5l/btrbhZqw7AE/QR7RN11VAGkWk4LgKGPuCk/img.png](https://blog.kakaocdn.net/dn/cj7Y5l/btrbhZqw7AE/QR7RN11VAGkWk4LgKGPuCk/img.png)

**1. 시스템(System) / 시스템 범위(System Scope)**

시스템 내부의 유스케이스들을 사각형으로 묶어

시스템의 범위를 표현 한 것

**2. 액터(Actor)**

![https://blog.kakaocdn.net/dn/bn7QoT/btrbgoqw4gv/6nVRs0s8wMYK5ZGhsD4LMK/img.png](https://blog.kakaocdn.net/dn/bn7QoT/btrbgoqw4gv/6nVRs0s8wMYK5ZGhsD4LMK/img.png)

시스템과 상호작용을 하는 모든 외부 요소.

주로 사람이나 외부 시스템을 의미.

주액터 : 시스템을 사용함으로써 이득을 얻는 대상(주로 사람)

부액터 : 시스템에 서비스를 제공하는 외부 시스템(조직, 기관 등)

**3. 유스케이스(Use Case)**

![https://blog.kakaocdn.net/dn/oujdX/btrbmzq2gP4/NdKi0KwC2ELUl1xlCK2Nlk/img.png](https://blog.kakaocdn.net/dn/oujdX/btrbmzq2gP4/NdKi0KwC2ELUl1xlCK2Nlk/img.png)

사용자가 보는 관점에서

시스템이 액터에게 제공하는 서비스나 기능을 표현한 것

**4. 관계(Relationship)**

유스케이스 다이어그램에서 관계는

액터와 유스케이스,

유스케이스와 유스케이스 사이에서

나타날 수 있다.

나타낼 수 있는 관계는

포함 관계<<include>>, 확장 관계<<extends>>, 일반화 관계(실선).

---

## **Section 14**

### **활동(Activity) 다이어그램**

사용자의 관점에서

시스템이 수행하는 기능을

처리 흐름에 따라 순서대로 표현한 것.

자료 흐름도와 유사하다.

![https://blog.kakaocdn.net/dn/kw172/btrbpOHYWYq/2npfgjyZyABUOhDWvwH7xK/img.png](https://blog.kakaocdn.net/dn/kw172/btrbpOHYWYq/2npfgjyZyABUOhDWvwH7xK/img.png)

### **활동(Activity) 다이어그램의 구성 요소**

**1. 액션(Action) / 액티비티(Activity)**

![https://blog.kakaocdn.net/dn/nfwOX/btrbq4jpdKn/G41aUNYKt52SSWDD4arWTK/img.png](https://blog.kakaocdn.net/dn/nfwOX/btrbq4jpdKn/G41aUNYKt52SSWDD4arWTK/img.png)

액션은 더 이상 분해할 수 없는 단일 작업.

액티비티는 몇 개의 액션으로 분리될 수 있는 작업.

**2. 시작 노드 / 종료 노드**

![https://blog.kakaocdn.net/dn/JIPwU/btrbmyTfemQ/DdlqmXVPyl8z3SbHKmLW00/img.png](https://blog.kakaocdn.net/dn/JIPwU/btrbmyTfemQ/DdlqmXVPyl8z3SbHKmLW00/img.png)

시작 노드 : 액션, 액티비티가 시작됨을 표현

종료 노드 : 액티비티 안의 모든 흐름이 종료됨을 표현

**3. 조건(판단) 노드**

![https://blog.kakaocdn.net/dn/nFUWK/btrbgo49dQb/VcfrXEBCHjqK0v232vVkxk/img.png](https://blog.kakaocdn.net/dn/nFUWK/btrbgo49dQb/VcfrXEBCHjqK0v232vVkxk/img.png)

조건에 따라 제어의 흐름이 분리됨을 표현.

들어오는 제어 흐름이 한 개이고

나가는 제어 흐름이 여러 개다.

**4. 병합 노드**

![https://blog.kakaocdn.net/dn/cvE5KD/btrbhZKSl6z/KJH3hCZx0sxrTXxbBUuDd1/img.png](https://blog.kakaocdn.net/dn/cvE5KD/btrbhZKSl6z/KJH3hCZx0sxrTXxbBUuDd1/img.png)

여러 경로의 흐름이 하나로 합쳐짐을 표현.

들어오는 제어 흐름은 여러 개이고

나가는 제어 흐름은 하나이다.

**5. 포크(Fork) 노드**

![https://blog.kakaocdn.net/dn/S8p4o/btrbkVOyWNm/u0v94Iv4J2sTvVy7IQ3jF0/img.png](https://blog.kakaocdn.net/dn/S8p4o/btrbkVOyWNm/u0v94Iv4J2sTvVy7IQ3jF0/img.png)

액티비티 흐름이 분리되어 수행됨을 표현.

들어오는 액티비티 흐름은 한 개이고

나가는 액티비티 흐름은 여러 개다.

**6. 조인(Join) 노드**

![https://blog.kakaocdn.net/dn/cNypd0/btrbmylpjfW/KDaFyga8scmMpOuucGebh0/img.png](https://blog.kakaocdn.net/dn/cNypd0/btrbmylpjfW/KDaFyga8scmMpOuucGebh0/img.png)

분리되어 수행되던 액티비티 흐름이

다시 합쳐짐을 표현.

들어오는 액티비티 흐름은 여러 개이고

나가는 액티비티 흐름은 한 개다.

**7. 스윔 레인(Swim Lane)**

![https://blog.kakaocdn.net/dn/Yu1tU/btrbquifauC/wdKYHVPMnjQw6dy66QBFuK/img.png](https://blog.kakaocdn.net/dn/Yu1tU/btrbquifauC/wdKYHVPMnjQw6dy66QBFuK/img.png)

액티비티 수행을 담당하는 주체를 구분하는 선.

가로 또는 세로 실선을 그어 구분함.
